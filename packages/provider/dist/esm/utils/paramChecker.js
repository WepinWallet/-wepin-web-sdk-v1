function r(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=Array(t);e<t;e++)n[e]=r[e];return n}import{Buffer as t}from"buffer";import{Transaction as e,Message as n,SystemProgram as o,PublicKey as a}from"@solana/web3.js";export var signTransactionParameterChecker=function(t){var e=/^[1-9A-HJ-NP-Za-km-z]{32,44}$/,n=!0,o=!1,a=void 0;try{for(var i,u=Object.entries(t)[Symbol.iterator]();!(n=(i=u.next()).done);n=!0){var l,f=(l=i.value,function(r){if(Array.isArray(r))return r}(l)||function(r,t){var e,n,o=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=o){var a=[],i=!0,u=!1;try{for(o=o.call(r);!(i=(e=o.next()).done)&&(a.push(e.value),2!==a.length);i=!0);}catch(r){u=!0,n=r}finally{try{i||null==o.return||o.return()}finally{if(u)throw n}}return a}}(l,2)||function(t,e){if(t){if("string"==typeof t)return r(t,2);var n=Object.prototype.toString.call(t).slice(8,-1);if("Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,2)}}(l,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=f[0],c=f[1];if("from"==s||"to"==s){if(c&&!c.startsWith("0x")&&!e.test(c))return console.error("".concat(c," is not a valid Ethereum or Solana address")),!1}else if(c&&!c.startsWith("0x"))return console.error("".concat(c," does not start with '0x'")),!1}}catch(r){o=!0,a=r}finally{try{n||null==u.return||u.return()}finally{if(o)throw a}}return!0};export var parsingSolanaTransaction=function(r){var t=i(r),u=e.populate(n.from(t)),l="",f=u.instructions.filter(function(r){return r.programId.equals(new a("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"))&&(l=r.keys[1].pubkey.toString()),r.programId.equals(o.programId)&&2===r.data[0]});return 0===f.length?{from:u.feePayer.toString(),to:l}:{from:f[0].keys[0].pubkey.toString(),to:f[0].keys[1].pubkey.toString(),value:"0x"+f[0].data.readIntLE(4,8).toString(16)}};var i=function(r){for(var t=[],e=0;e<r.length;e+=2)t.push(parseInt(r.substr(e,2),16));return new Uint8Array(t)};export var decodeTransaction=function(r,o){var a=i(o);try{return e.from(a)}catch(a){var u=e.populate(n.from(i(r)));return u.addSignature(u.feePayer,t.from(o,"hex")),u}};