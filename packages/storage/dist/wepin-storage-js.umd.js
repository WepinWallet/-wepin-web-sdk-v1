(function(l,t){typeof exports=="object"&&typeof module<"u"?module.exports=t():typeof define=="function"&&define.amd?define(t):(l=typeof globalThis<"u"?globalThis:l||self,l["@wepin/storage-js"]=t())})(this,function(){"use strict";var g=(l,t,s)=>{if(!t.has(l))throw TypeError("Cannot "+s)};var r=(l,t,s)=>(g(l,t,"read from private field"),s?s.call(l):t.get(l)),n=(l,t,s)=>{if(t.has(l))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(l):t.set(l,s)};var t;const s=class s{static getLocalStorageEnabled(){let o=!1;try{o=window.localStorage&&!0}catch{o=!1}return o}static setAllLocalStorage(o,a){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}const e=JSON.stringify(a);localStorage.setItem(r(this,t)+o,e)}static setLocalStorage(o,a,e){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}const i=this.getAllLocalStorage(o);if(i){i[a]=e,localStorage.setItem(r(this,t)+o,JSON.stringify(i));return}const c={[a]:e};localStorage.setItem(r(this,t)+o,JSON.stringify(c))}static getLocalStorage(o,a){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}const e=this.getAllLocalStorage(o);try{if(e)return JSON.parse(e[a])}catch{return e[a]}}static getAllLocalStorage(o){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}try{return localStorage.getItem(r(this,t)+o)?JSON.parse(localStorage.getItem(r(this,t)+o)):void 0}catch{return}}static clearLocalStorage(o,a){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}if(this.getLocalStorage(o,a)){const i=this.getAllLocalStorage(o);delete i[a],localStorage.setItem(r(this,t)+o,JSON.stringify(i))}}static clearAllLocalStorage(o){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}localStorage.removeItem(r(this,t)+o)}static setLoginUserLocalStorage(o,a,e){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}const i={};return i["firebase:wepin"]=Object.assign({provider:a==null?void 0:a.provider},a==null?void 0:a.token),i["wepin:connectUser"]={accessToken:e.token.access,refreshToken:e.token.refresh},i.user_id=e.userInfo.userId,i.user_info={status:"success",userInfo:{userId:e.userInfo.userId,email:e.userInfo.email,provider:a.provider,use2FA:e.userInfo.use2FA>=2}},i.user_status={loginStatus:e.loginStatus,pinRequired:e.loginStatus==="registerRequired"?e.pinRequired:!1},e.loginStatus!=="pinRequired"&&e.walletId&&(i.wallet_id=e.walletId,i.user_info.walletId=e.walletId),i.oauth_provider_pending=a.provider,s.setAllLocalStorage(o,i),{userInfo:i.user_info,connectUser:i["wepin:connectUser"]}}};t=new WeakMap,s.platform="web",n(s,t,"wepin:auth:");let l=s;return l});
