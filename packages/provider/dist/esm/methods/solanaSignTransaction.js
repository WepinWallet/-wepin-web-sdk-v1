import{ethErrors as r}from"eth-rpc-errors";import{signTransactionParameterChecker as i,parsingSolanaTransaction as a}from"../utils/paramChecker.js";import{getSelectedAddress as e}from"../utils/selectedAddress.js";import{getAddress as n}from"../utils/utils.js";import{signTransaction as o}from"./signTransaction.js";export var solanaSignTransaction=function(s){var t=s.wepinProvider,p=s.network;return function(s,d,u,m){if(!t._isInitialized){m(r.provider.unauthorized());return}var l,v=!1;Object.keys(s.params).includes("message")||(m(r.rpc.invalidParams()),v=!0);var c=a(Object.values(s.params)[0]);void 0===c.value?c.data="0x"+Object.values(s.params)[0]:i(c)||(m(r.rpc.invalidParams()),v=!0);var f=null!==(l=c.from)&&void 0!==l?l:"";e(t.wepinStorage,t.wepinAppId,p).then(function(i){if((null==i?void 0:i.address)!==n(p,f)){m(r.provider.unauthorized());return}v||(s.params=[c],o({wepinProvider:t,network:p})(s,d,u,m))})}};