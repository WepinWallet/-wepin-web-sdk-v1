(function(i,e){typeof exports=="object"&&typeof module!="undefined"?module.exports=e():typeof define=="function"&&define.amd?define(e):(i=typeof globalThis!="undefined"?globalThis:i||self,i["@wepin/storage-js"]=e())})(this,function(){"use strict";var u=i=>{throw TypeError(i)};var S=(i,e,r)=>e.has(i)||u("Cannot "+r);var s=(i,e,r)=>(S(i,e,"read from private field"),r?r.call(i):e.get(i)),d=(i,e,r)=>e.has(i)?u("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(i):e.set(i,r);var c=(i,e,r)=>new Promise((f,a)=>{var o=n=>{try{l(r.next(n))}catch(g){a(g)}},t=n=>{try{l(r.throw(n))}catch(g){a(g)}},l=n=>n.done?f(n.value):Promise.resolve(n.value).then(o,t);l((r=r.apply(i,e)).next())});var e;const r=class r{constructor(){this.platform="web"}getLocalStorageEnabled(){let a=!1;try{a=window.localStorage&&!0}catch(o){a=!1}return a}setAllLocalStorage(a,o){return c(this,null,function*(){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}const t=JSON.stringify(o);localStorage.setItem(s(r,e)+a,t)})}setLocalStorage(a,o,t){return c(this,null,function*(){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}const l=yield this.getAllLocalStorage(a);if(l){l[o]=t,localStorage.setItem(s(r,e)+a,JSON.stringify(l));return}const n={[o]:t};localStorage.setItem(s(r,e)+a,JSON.stringify(n))})}getLocalStorage(a,o){return c(this,null,function*(){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}const t=yield this.getAllLocalStorage(a);try{if(t)return JSON.parse(t[o])}catch(l){if(t)return t[o]}})}getAllLocalStorage(a){return c(this,null,function*(){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}try{return localStorage.getItem(s(r,e)+a)?JSON.parse(localStorage.getItem(s(r,e)+a)):void 0}catch(o){return}})}clearLocalStorage(a,o){return c(this,null,function*(){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}if(yield this.getLocalStorage(a,o)){const l=yield this.getAllLocalStorage(a);if(!l)return;delete l[o],localStorage.setItem(s(r,e)+a,JSON.stringify(l))}})}clearAllLocalStorage(a){return c(this,null,function*(){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}localStorage.removeItem(s(r,e)+a)})}setLoginUserLocalStorage(a,o,t){return c(this,null,function*(){if(!this.getLocalStorageEnabled()){console.error("Local storage is not available. We recommend using local storage to maintain login sessions.");return}const l={};return l["firebase:wepin"]=Object.assign({provider:o==null?void 0:o.provider},o==null?void 0:o.token),l["wepin:connectUser"]={accessToken:t.token.access,refreshToken:t.token.refresh},l.user_id=t.userInfo.userId,l.user_info={status:"success",userInfo:{userId:t.userInfo.userId,email:t.userInfo.email,provider:o.provider,use2FA:t.userInfo.use2FA>=2}},l.user_status={loginStatus:t.loginStatus,pinRequired:t.loginStatus==="registerRequired"?t.pinRequired:!1},t.loginStatus!=="pinRequired"&&t.walletId&&(l.wallet_id=t.walletId,l.user_info.walletId=t.walletId),l.oauth_provider_pending=o.provider,this.setAllLocalStorage(a,l),{userInfo:l.user_info,connectUser:l["wepin:connectUser"]}})}};e=new WeakMap,d(r,e,"wepin:auth:");let i=r;return i});
